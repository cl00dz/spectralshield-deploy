name: Release SpectralShield

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  build-docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract version tag
        id: get_tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Download built web app artifact
        uses: actions/download-artifact@v4
        with:
          name: spectralshield-web-build
          path: app

      - name: Build & Push Docker Images
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:latest .
          docker tag ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:latest ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:${{ steps.get_tag.outputs.tag }}
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:latest
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:${{ steps.get_tag.outputs.tag }}

  build-installer:
    name: Build Windows Installer
    needs: build-docker
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set TAG env
        run: echo "TAG=${{ needs.build-docker.outputs.tag }}" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Install Inno Setup
        run: choco install innosetup -y

      - name: Download Web Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: spectralshield-web-build
          path: app

      - name: Debug paths
        run: |
          Write-Host "=== Working Dir ==="
          Get-Location
          Write-Host "=== installer dir contents ==="
          Get-ChildItem installers/windows -Recurse
        shell: pwsh

      - name: Build Installer
        run: iscc "installers/windows/SpectralShield.iss"

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          files: |
            deploy.ps1
            docker-compose.yml
            installers/windows/Output/SpectralShield-Installer.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
