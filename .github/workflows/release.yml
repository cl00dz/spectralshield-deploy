name: Release SpectralShield

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:

  build-docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract version tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:latest .
          docker tag ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:latest ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:${{ env.TAG }}
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:latest
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:${{ env.TAG }}


  build-installer:
    name: Build Windows Installer
    needs: build-docker
    runs-on: windows-latest

    steps:
      - name: Checkout deploy repo
        uses: actions/checkout@v3

      - name: Restore version tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Inno Setup
        run: choco install innosetup -y

      - name: Clone Google AI Studio Code Repo
        run: |
          git clone https://${{ secrets.CODE_REPO_PAT }}@github.com/cl00dz/spectralshield-code.git app-source
     
      - name: Debug folder structure
        run: |
             echo "=== WORKING DIRECTORY ==="
              echo $pwd
             echo ""
              echo "=== ROOT DIRECTORY CONTENTS ==="
             dir
              echo ""
              echo "=== installers/windows CONTENTS ==="
              dir installers/windows
              echo ""
              echo "=== app-source CONTENTS ==="
              dir app-source
              
      - name: Verify files pulled
        run: |
          echo "Listing app-source directory:"
          dir app-source

      - name: Build Installer
        run: |
          iscc "installers/windows/SpectralShield.iss"

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          files: |
            deploy.ps1
            docker-compose.yml
            installers/windows/SpectralShield-Installer.exe
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_REPO_PAT }}
