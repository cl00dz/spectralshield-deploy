name: Build & Publish

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout deploy repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Determine version
        id: version
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          IFS='.' read -r MAJOR MINOR PATCH <<< "${LAST_TAG#v}"
          NEW_TAG="v$MAJOR.$MINOR.$((PATCH + 1))"
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "new=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "sha=$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push images
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:latest .
          docker tag ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:latest ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:${{ steps.version.outputs.new }}
          docker tag ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:latest ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:${{ steps.version.outputs.sha }}
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:latest
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:${{ steps.version.outputs.new }}
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/spectralshield:${{ steps.version.outputs.sha }}

      - name: Prepare deployment folder
        run: |
          rm -rf spectralshield
          mkdir spectralshield

          # Copy installer + compose
          cp docker-compose.yml spectralshield/
          cp deploy.ps1 spectralshield/
          cp README.md spectralshield/ || true

          # Copy app folder
          cp -r app spectralshield/app

      - name: Create release zip
        run: zip -r spectralshield.zip spectralshield

      - name: Create Release and Upload ZIP
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.new }}
          name: SpectralShield ${{ steps.version.outputs.new }}
          body: |
            ‚úÖ Auto-built SpectralShield Release
            üì¶ Fully packaged deploy bundle
            üê≥ Docker image loaded with production build
          files: spectralshield.zip
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_REPO_PAT }}
